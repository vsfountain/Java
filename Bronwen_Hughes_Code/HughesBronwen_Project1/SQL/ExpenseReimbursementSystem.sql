CREATE TABLE ERS_USER_ROLES(
    ERS_USER_ROLE_ID NUMBER PRIMARY KEY,
    USER_ROLE VARCHAR2(10)
);

DROP TABLE ERS_USER_ROLES;
CREATE TABLE ERS_REIMBURSEMENT_TYPE(
    REIMB_TYPE_ID NUMBER PRIMARY KEY,
    REIMB_TYPE VARCHAR2(10)
);

CREATE TABLE ERS_REIMBURSEMENT_STATUS(
    REIMB_STATUS_ID NUMBER PRIMARY KEY,
    REIMB_STATUS VARCHAR2(10)
);

DROP TABLE ERS_REIMBURSEMENT_TYPE;

CREATE TABLE ERS_USERS(
    ERS_USERS_ID NUMBER PRIMARY KEY,
    ERS_USERNAME VARCHAR2(50) UNIQUE,
    ERS_PASSWORD VARCHAR2(50),
    USER_FIRST_NAME VARCHAR2(100),
    USER_LAST_NAME VARCHAR2(100),
    USER_EMAIL VARCHAR2(150) UNIQUE,
    USER_ROLE_ID NUMBER,
    FOREIGN KEY (USER_ROLE_ID) REFERENCES ERS_USER_ROLES(ERS_USER_ROLE_ID)
);

CREATE TABLE ERS_REIMBURSEMENT(
    REIMB_ID NUMBER PRIMARY KEY,
    REIMB_AMOUNT NUMBER,
    REIMB_SUBMITTED TIMESTAMP,
    REIMB_RESOLVED TIMESTAMP,
    REIMB_DESCRIPTION VARCHAR2(250),
    REIMB_RECEIPT BLOB,
    REIMB_AUTHOR NUMBER,
    REIMB_RESOLVER NUMBER,
    REIMB_STATUS_ID NUMBER,
    REIMB_TYPE_ID NUMBER,
     FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS(ERS_USERS_ID),
     FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS(ERS_USERS_ID),
     FOREIGN KEY (REIMB_STATUS_ID) REFERENCES ERS_REIMBURSEMENT_STATUS(REIMB_STATUS_ID),
     FOREIGN KEY (REIMB_TYPE_ID) REFERENCES ERS_REIMBURSEMENT_TYPE(REIMB_TYPE_ID)
);

DROP SEQUENCE ERS_REIMB_ID_SEQ;

CREATE SEQUENCE ERS_REIMB_ID_SEQ
START WITH 1
INCREMENT BY 1;
    
CREATE SEQUENCE ERS_USERS_ID_SEQ
START WITH 1
INCREMENT BY 1;


CREATE SEQUENCE ERS_REIMB_STATUS_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ERS_REIMB_TYPE_ID_SEQ
START WITH 1
INCREMENT BY 1;

DROP SEQUENCE ERS_REIMB_TYPE_ID_SEQ;

CREATE SEQUENCE ERS_USER_ROLE_ID_SEQ
START WITH 1
INCREMENT BY 1;

DROP SEQUENCE ERS_USER_ROLES_ID_SEQ;
CREATE OR REPLACE TRIGGER ERS_REIMB_ID_NULL_TRIG
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
        IF :new.REIMB_ID IS NULL THEN
                SELECT ERS_REIMB_ID_SEQ.nextval INTO :new.REIMB_ID FROM dual;
        END IF;
END;
/

CREATE OR REPLACE TRIGGER ERS_USERS_ID_NULL_TRIG
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
        IF :new.ERS_USERS_ID IS NULL THEN
                SELECT ERS_USERS_ID_SEQ.nextval INTO :new.ERS_USERS_ID FROM dual;
        END IF;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_ERS_USERS_ID_NULL(ers_username IN VARCHAR2, ers_password VARCHAR2, user_first_name IN VARCHAR, user_last_name IN VARCHAR2, user_email IN VARCHAR, user_role_id IN NUMBER)
IS
BEGIN
    INSERT INTO ERS_USERS VALUES(ERS_USERS_ID_SEQ.NEXTVAL, ers_username, ers_password, user_first_name, user_last_name, user_email, user_role_id);
    COMMIT;
END;    
/


CREATE OR REPLACE TRIGGER ERS_REIMB_STATUS_ID_NULL_TRIG
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
        IF :new.REIMB_STATUS_ID IS NULL THEN
                SELECT ERS_REIMB_STATUS_ID_SEQ.nextval INTO :new.REIMB_STATUS_ID FROM dual;
        END IF;
END;
/

DROP TRIGGER ERS_REIMB_STATUS_ID_NULL_TRIG;

CREATE OR REPLACE PROCEDURE INSERT_ERS_REIMB_S_ID_NULL(reimb_status IN VARCHAR2)
IS
BEGIN
    INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(ERS_REIMB_STATUS_ID_SEQ.NEXTVAL, reimb_status);
    COMMIT;
END;
/


CREATE OR REPLACE TRIGGER ERS_REIMB_TYPE_ID_NULL_TRIG
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW
BEGIN
        IF :new.REIMB_TYPE_ID IS NULL THEN
                SELECT ERS_REIMB_TYPE_ID_SEQ.nextval INTO :new.REIMB_TYPE_ID FROM dual;
        END IF;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_ERS_REIMB_T_ID_NULL(reimb_type IN VARCHAR2)
IS
BEGIN
    INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(ERS_REIMB_TYPE_ID_SEQ.NEXTVAL, reimb_type);
    COMMIT;
END;
/

CREATE OR REPLACE TRIGGER ERS_USER_ROLE_ID_NULL_TRIG
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
        IF :new.ERS_USER_ROLE_ID IS NULL THEN
                SELECT ERS_USER_ROLE_ID_SEQ.nextval INTO :new.ERS_USER_ROLE_ID FROM dual;
        END IF;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_ERS_USER_ROLES_ID_NULL(user_role IN VARCHAR2)
IS
BEGIN
    INSERT INTO ERS_USER_ROLES VALUES(ERS_USER_ROLE_ID_SEQ.NEXTVAL, user_role);
    COMMIT;
END;
/

INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE) VALUES('LODGING');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE) VALUES('TRAVEL');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE) VALUES('FOOD');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE) VALUES('OTHER');
SELECT * FROM ERS_REIMBURSEMENT_TYPE;

DELETE FROM ERS_REIMBURSEMENT_TYPE WHERE REIMB_TYPE_ID=10;

ROLLBACK;


INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS) VALUES('Pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS) VALUES('Approved');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS) VALUES('Denied');
select * from ers_reimbursement_status;


INSERT INTO ERS_USER_ROLES (USER_ROLE) VALUES('Employee');
INSERT INTO ERS_USER_ROLES (USER_ROLE) VALUES('Admin');
select * from ers_user_roles;

INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('coltossoff','12345','Colt','Ossoff','coltossoff@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('seandoyle','12345','Sean','Doyle','SCDoyle316@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('phillippride','12345','Phillip','Pride','phillipjpride@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('kristenkavanagh','12345','Kristen','Kavanagh','Kristen.kavanagh.wright@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('alexandriawise','12345','Alexandria','Wise','alexandriarwise@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('michaeljung','12345','Michael','Jung','michael.jungrevature@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('bronwenhughes','12345','Bronwen','Hughes','bronwen@hughesnet.org',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('ryanwilliams','12345','Ryan','Williams','rrwilliams1600@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('vanessafountain','12345','Vanessa','Fountain','vanessa.s.fountain@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('louispipkin','12345','Louis','Pipkin','ldpipkin@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('joshuajibilian','12345','Joshua','Jibilian','jwjibilian@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('johnjosephsavath','12345','John','Savath','Johnsavath@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('michaelgrammens','12345','Michael','Grammens','MLGrammens@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('clementdikoko','12345','Clement','Dikoko','clementdikoko94@gmail.com',1);
INSERT INTO ERS_USERS (ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID) VALUES('trevinchester','help','Trevin','Chester','Trevin.Chester@revature.com',2);
select * from ers_users;

COMMIT;