package testing;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.not;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.mock;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.junit.Test;
import org.mockito.Mockito;

import ServiceLayer.VaultServiceImplementation;
import Servlets.MasterServlet;

public class Testing{
	
	@Test
	public void getUsername() {
		System.out.print("Currently testing username set");
		VaultServiceImplementation tester = new VaultServiceImplementation();
		String username = "vsfount";
		String password = "password";
		assertThat("No UserID is 0", tester.getUserInfo(username, password), is(not(0)));
		assertThat("Should be 1",tester.getUserInfo(username, password), is(1));
		
	}
	
	@Test
    public void testServlet() throws Exception {
        HttpServletRequest request = mock(HttpServletRequest.class);       
        HttpServletResponse response = mock(HttpServletResponse.class);
        MasterServlet testServ = mock(MasterServlet.class);

        Mockito.when(request.getParameter("username")).thenReturn("vsfount");
        Mockito.when(request.getParameter("password")).thenReturn("password");
        
        //CANNOT MOCK PRIMITIVE TYPES
        //ANY METHOD CALLED FROM doPost OR doGet of type "void" CANNOT BE MOCKED
        //StringWriter stringWriter = new StringWriter();
        //PrintWriter writer = new PrintWriter(stringWriter);
        
        testServ.doGet(request, response);
        testServ.doPost(request, response);
        
        Mockito.verify(request);
        //Mockito.verify(response);
    }
	
	

}
